Octave File
  PsiComment(Octave:COMMENT)('%PMTKauthor Jarno Vanhatalo')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('% Same as demo_spatial1 from GPstuff-2.0 except')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('% we only run Laplace, not MCMC, for speed')
  PsiElement(Octave:LINE_BREAK)('\n\n')
  PsiComment(Octave:COMMENT)('%DEMO_SPATIAL1    Demonstration for a disease mapping problem')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%                 with Gaussian process prior and Poisson likelihood')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%\n')
  PsiComment(Octave:COMMENT)('%    Description')
  PsiElement(Octave:LINE_BREAK)('\n\n')
  PsiComment(Octave:COMMENT)('%    The disease mapping problem consist of a data with number of')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    death cases, Y, and background population, N, appointed to')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    co-ordinates, X.  The goal is to find a relative risk surface,')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    which describes if the number of death cases in certain areas is')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    lower or higher than expected.  The data consists of the heart')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    attacks in Finland from 1996-2000 aggregated into 20kmx20km')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    lattice cells.')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%\n')
  PsiComment(Octave:COMMENT)('%    The model constructed is as follows:')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%\n')
  PsiComment(Octave:COMMENT)('%    The number of death cases Y_i in area i is assumed to satisfy')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%\n')
  PsiComment(Octave:COMMENT)('%         Y_i ~ Poisson(Y_i| E_i * r_i)')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%\n')
  PsiComment(Octave:COMMENT)('%    where E_i is the expected number of deaths (see Vanhatalo and')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    Vehtari (2007, 2010), how E_i is evaluated) at area i and r_i is')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    the relative risk.')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%\n')
  PsiComment(Octave:COMMENT)('%    We place a zero mean Gaussian process prior for log(R), R = [r_1,')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    r_2,...,r_n], which implies that at the observed input locations')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    latent values, f, have prior')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%\n')
  PsiComment(Octave:COMMENT)('%         f = log(R) ~ N(0, K),')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%\n')
  PsiComment(Octave:COMMENT)('%    where K is the covariance matrix, whose elements are given as')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    K_ij = k(x_i, x_j | th). The function k(x_i, x_j | th) is')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    covariance function and th its parameters, hyperparameters.  We')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    place a hyperprior for hyperparameters, p(th).')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%\n')
  PsiComment(Octave:COMMENT)('%    Since the data set used in this demo is rather large we use FIC')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    sparse approximation for the GP prior.')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%\n')
  PsiComment(Octave:COMMENT)('%    The inference is conducted first with Laplace approximation and')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    then via MCMC. We sample from the full posterior p(f, th| data)')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    by alternating the sampling from the conditional posteriors p(f |')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    th, data) and p(th | f, data). The sampling from the conditional')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    posteriors is done by hybrid Monte Carlo (see, for example, Neal,')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    1996).')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%\n')
  PsiComment(Octave:COMMENT)('%    See Vanhatalo and Vehtari (2007) and Vanhatalo et.al. (2010) for')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    more detailed discussion.')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%\n')
  PsiComment(Octave:COMMENT)('%    This demo is organised in three parts:')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%     1) data analysis with Laplace approximation')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%     2) data analysis with integrated Laplace approximation')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%     3) data analysis with MCMC')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%\n')
  PsiComment(Octave:COMMENT)('%    See also  DEMO_REGRESSION1, DEMO_CLASSIFIC1')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%\n')
  PsiComment(Octave:COMMENT)('%\n')
  PsiComment(Octave:COMMENT)('%   Refernces:')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    Vanhatalo, J., Pietilï¿½inen V. and Vehtari, A. (2010). Approximate')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    inference for disease mapping with sparse Gaussian processes.')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    Statistics in Medicine, 29(15):.')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%\n')
  PsiComment(Octave:COMMENT)('%    Jarno Vanhatalo and Aki Vehtari (2007). Sparse Log Gaussian')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    Processes via MCMC for Spatial Epidemiology. JMLR Workshop and')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%    Conference Proceedings, 1:73-89. (Gaussian Processes in Practice)')
  PsiElement(Octave:LINE_BREAK)('\n\n')
  PsiComment(Octave:COMMENT)('% Copyright (c) 2008-2010 Jarno Vanhatalo')
  PsiElement(Octave:LINE_BREAK)('\n\n')
  PsiComment(Octave:COMMENT)('% This software is distributed under the GNU General Public ')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('% License (version 2 or later); please refer to the file ')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('% License.txt, included with the software, for details.')
  PsiElement(Octave:LINE_BREAK)('\n\n\n')
  PsiComment(Octave:COMMENT)('% =====================================')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('% 1) Laplace approximation')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('% =====================================')
  PsiElement(Octave:LINE_BREAK)('\n\n')
  PsiComment(Octave:COMMENT)('% load the data')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('S')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('which')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''demo_spatial1'')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('data')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('load')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('strrep')
          Octave:PAR_EXPRESSION
            PsiElement(Octave:LPAR)('(')
            Octave:EXPRESSION
              Octave:REFERENCE_EXPRESSION
                PsiElement(Octave:IDENTIFIER)('S')
            PsiElement(Octave:COMMA)(',')
            Octave:EXPRESSION
              Octave:STRING_LITERAL
                PsiElement(Octave:STRING)(''demo_spatial1.m'')
            PsiElement(Octave:COMMA)(',')
            Octave:EXPRESSION
              Octave:STRING_LITERAL
                PsiElement(Octave:STRING)(''demos/spatial1.txt'')
            PsiElement(Octave:RPAR)(')')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('xx')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('data')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:SLICE_EXPRESSION
            PsiElement(Octave:COLON)(':')
        PsiElement(Octave:COMMA)(',')
        Octave:EXPRESSION
          Octave:SLICE_EXPRESSION
            Octave:INTEGER_LITERAL
              PsiElement(Octave:INTEGER_LITERAL)('1')
            PsiElement(Octave:COLON)(':')
            Octave:INTEGER_LITERAL
              PsiElement(Octave:INTEGER_LITERAL)('2')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('ye')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('data')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:SLICE_EXPRESSION
            PsiElement(Octave:COLON)(':')
        PsiElement(Octave:COMMA)(',')
        Octave:EXPRESSION
          Octave:INTEGER_LITERAL
            PsiElement(Octave:INTEGER_LITERAL)('3')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('yy')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('data')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:SLICE_EXPRESSION
            PsiElement(Octave:COLON)(':')
        PsiElement(Octave:COMMA)(',')
        Octave:EXPRESSION
          Octave:INTEGER_LITERAL
            PsiElement(Octave:INTEGER_LITERAL)('4')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n\n\n')
  PsiComment(Octave:COMMENT)('% Now we have loaded the following parameters')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('% xx = co-ordinates ')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('% yy = number of deaths')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('% ye = the expexted number of deaths')
  PsiElement(Octave:LINE_BREAK)('\n\n')
  PsiComment(Octave:COMMENT)('% Set the inducing inputs in a regular grid.  Set_PIC returns the')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('% induving inputs and blockindeces for PIC. It also plots the data')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('% points, inducing inputs and blocks.')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('dims')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:BRACKET_EXPRESSION
        PsiElement(Octave:LBRACKET)('[')
        Octave:EXPRESSION
          Octave:INTEGER_LITERAL
            PsiElement(Octave:INTEGER_LITERAL)('1')
        PsiWhiteSpace('    ')
        Octave:EXPRESSION
          Octave:INTEGER_LITERAL
            PsiElement(Octave:INTEGER_LITERAL)('60')
        PsiWhiteSpace('     ')
        Octave:EXPRESSION
          Octave:INTEGER_LITERAL
            PsiElement(Octave:INTEGER_LITERAL)('1')
        PsiWhiteSpace('    ')
        Octave:EXPRESSION
          Octave:INTEGER_LITERAL
            PsiElement(Octave:INTEGER_LITERAL)('35')
        PsiElement(Octave:RBRACKET)(']')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:BRACKET_EXPRESSION
        PsiElement(Octave:LBRACKET)('[')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('trindex')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('Xu')
        PsiElement(Octave:RBRACKET)(']')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('set_PIC')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('xx')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('dims')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:INTEGER_LITERAL
            PsiElement(Octave:INTEGER_LITERAL)('5')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''corners'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:INTEGER_LITERAL
            PsiElement(Octave:INTEGER_LITERAL)('0')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:BRACKET_EXPRESSION
        PsiElement(Octave:LBRACKET)('[')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('n')
        PsiElement(Octave:COMMA)(',')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('nin')
        PsiElement(Octave:RBRACKET)(']')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('size')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('xx')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n\n')
  PsiComment(Octave:COMMENT)('% Create the covariance functions')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('gpcf1')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('gpcf_matern32')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''init'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''lengthScale'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:INTEGER_LITERAL
            PsiElement(Octave:INTEGER_LITERAL)('5')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''magnSigma2'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:FLOAT_NUMBER_LITERAL
            PsiElement(Octave:FLOAT_NUMBER_LITERAL)('0.05')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('pl')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('prior_t')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''init'')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('pm')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('prior_t')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''init'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''s2'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:FLOAT_NUMBER_LITERAL
            PsiElement(Octave:FLOAT_NUMBER_LITERAL)('0.3')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('gpcf1')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('gpcf_matern32')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''set'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('gpcf1')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''lengthScale_prior'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('pl')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''magnSigma2_prior'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('pm')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n\n')
  PsiComment(Octave:COMMENT)('% Create the likelihood structure')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('likelih')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('likelih_poisson')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''init'')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n\n')
  PsiComment(Octave:COMMENT)('% Create the FIC GP data structure so that inducing inputs are not optimized')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('gp')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('gp_init')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''init'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''FIC'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('likelih')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:BRACE_EXPRESSION
            PsiElement(Octave:LBRACE)('{')
            Octave:EXPRESSION
              Octave:REFERENCE_EXPRESSION
                PsiElement(Octave:IDENTIFIER)('gpcf1')
            PsiElement(Octave:RBRACE)('}')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:BRACKET_EXPRESSION
            PsiElement(Octave:LBRACKET)('[')
            PsiElement(Octave:RBRACKET)(']')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''X_u'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('Xu')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''jitterSigma2'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:FLOAT_NUMBER_LITERAL
            PsiElement(Octave:FLOAT_NUMBER_LITERAL)('0.001')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('gp')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('gp_init')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''set'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('gp')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''infer_params'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''covariance'')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n\n')
  PsiComment(Octave:COMMENT)('% --- MAP estimate with Laplace approximation ---')
  PsiElement(Octave:LINE_BREAK)('\n\n')
  PsiComment(Octave:COMMENT)('% Set the approximate inference method to Laplace approximation')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('gp')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('gp_init')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''set'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('gp')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''latent_method'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:BRACE_EXPRESSION
            PsiElement(Octave:LBRACE)('{')
            Octave:EXPRESSION
              Octave:STRING_LITERAL
                PsiElement(Octave:STRING)(''Laplace'')
            PsiElement(Octave:COMMA)(',')
            PsiWhiteSpace(' ')
            Octave:EXPRESSION
              Octave:REFERENCE_EXPRESSION
                PsiElement(Octave:IDENTIFIER)('xx')
            PsiElement(Octave:COMMA)(',')
            PsiWhiteSpace(' ')
            Octave:EXPRESSION
              Octave:REFERENCE_EXPRESSION
                PsiElement(Octave:IDENTIFIER)('yy')
            PsiElement(Octave:COMMA)(',')
            PsiWhiteSpace(' ')
            Octave:EXPRESSION
              Octave:STRING_LITERAL
                PsiElement(Octave:STRING)(''z'')
            PsiElement(Octave:COMMA)(',')
            PsiWhiteSpace(' ')
            Octave:EXPRESSION
              Octave:REFERENCE_EXPRESSION
                PsiElement(Octave:IDENTIFIER)('ye')
            PsiElement(Octave:RBRACE)('}')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('w')
    PsiElement(Octave:EQ)('=')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('gp_pak')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('gp')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiWhiteSpace('  ')
  PsiComment(Octave:COMMENT)('% pack the hyperparameters into one vector')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('fe')
    PsiElement(Octave:EQ)('=')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('str2fun')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''gpla_e'')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiWhiteSpace('     ')
  PsiComment(Octave:COMMENT)('% create a function handle to negative log posterior')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('fg')
    PsiElement(Octave:EQ)('=')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('str2fun')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''gpla_g'')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiWhiteSpace('     ')
  PsiComment(Octave:COMMENT)('% create a function handle to gradient of negative log posterior')
  PsiElement(Octave:LINE_BREAK)('\n\n')
  PsiComment(Octave:COMMENT)('% set the options for scg2')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('opt')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('scg2_opt')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('opt')
      PsiElement(Octave:DOT)('.')
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('tolfun')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:FLOAT_NUMBER_LITERAL
        PsiElement(Octave:FLOAT_NUMBER_LITERAL)('1e-3')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('opt')
      PsiElement(Octave:DOT)('.')
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('tolx')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:FLOAT_NUMBER_LITERAL
        PsiElement(Octave:FLOAT_NUMBER_LITERAL)('1e-3')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('opt')
      PsiElement(Octave:DOT)('.')
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('display')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:INTEGER_LITERAL
        PsiElement(Octave:INTEGER_LITERAL)('1')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n\n')
  PsiComment(Octave:COMMENT)('% do the optimization and set the optimized hyperparameter values back to the gp structure')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('w')
    PsiElement(Octave:EQ)('=')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('scg2')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('fe')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('w')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('opt')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('fg')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('gp')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('xx')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('yy')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''z'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('ye')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('gp')
    PsiElement(Octave:EQ)('=')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('gp_unpak')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('gp')
        PsiElement(Octave:COMMA)(',')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('w')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n\n')
  PsiComment(Octave:COMMENT)('% make prediction to the data points')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:BRACKET_EXPRESSION
        PsiElement(Octave:LBRACKET)('[')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('Ef')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('Varf')
        PsiElement(Octave:RBRACKET)(']')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('la_pred')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('gp')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('xx')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('yy')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('xx')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''z'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('ye')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''tstind'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:BRACKET_EXPRESSION
            PsiElement(Octave:LBRACKET)('[')
            Octave:EXPRESSION
              Octave:SLICE_EXPRESSION
                Octave:INTEGER_LITERAL
                  PsiElement(Octave:INTEGER_LITERAL)('1')
                PsiElement(Octave:COLON)(':')
                Octave:REFERENCE_EXPRESSION
                  PsiElement(Octave:IDENTIFIER)('n')
            PsiElement(Octave:RBRACKET)(']')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n\n')
  PsiComment(Octave:COMMENT)('% Define help parameters for plotting')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('xxii')
    PsiElement(Octave:EQ)('=')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('sub2ind')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:BRACKET_EXPRESSION
            PsiElement(Octave:LBRACKET)('[')
            Octave:EXPRESSION
              Octave:INTEGER_LITERAL
                PsiElement(Octave:INTEGER_LITERAL)('60')
            PsiWhiteSpace(' ')
            Octave:EXPRESSION
              Octave:INTEGER_LITERAL
                PsiElement(Octave:INTEGER_LITERAL)('35')
            PsiElement(Octave:RBRACKET)(']')
        PsiElement(Octave:COMMA)(',')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('xx')
          Octave:PAR_EXPRESSION
            PsiElement(Octave:LPAR)('(')
            Octave:EXPRESSION
              Octave:SLICE_EXPRESSION
                PsiElement(Octave:COLON)(':')
            PsiElement(Octave:COMMA)(',')
            Octave:EXPRESSION
              Octave:INTEGER_LITERAL
                PsiElement(Octave:INTEGER_LITERAL)('2')
            PsiElement(Octave:RPAR)(')')
        PsiElement(Octave:COMMA)(',')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('xx')
          Octave:PAR_EXPRESSION
            PsiElement(Octave:LPAR)('(')
            Octave:EXPRESSION
              Octave:SLICE_EXPRESSION
                PsiElement(Octave:COLON)(':')
            PsiElement(Octave:COMMA)(',')
            Octave:EXPRESSION
              Octave:INTEGER_LITERAL
                PsiElement(Octave:INTEGER_LITERAL)('1')
            PsiElement(Octave:RPAR)(')')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:BRACKET_EXPRESSION
        PsiElement(Octave:LBRACKET)('[')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('X1')
        PsiElement(Octave:COMMA)(',')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('X2')
        PsiElement(Octave:RBRACKET)(']')
    PsiElement(Octave:EQ)('=')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('meshgrid')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:SLICE_EXPRESSION
            Octave:INTEGER_LITERAL
              PsiElement(Octave:INTEGER_LITERAL)('1')
            PsiElement(Octave:COLON)(':')
            Octave:INTEGER_LITERAL
              PsiElement(Octave:INTEGER_LITERAL)('35')
        PsiElement(Octave:COMMA)(',')
        Octave:EXPRESSION
          Octave:SLICE_EXPRESSION
            Octave:INTEGER_LITERAL
              PsiElement(Octave:INTEGER_LITERAL)('1')
            PsiElement(Octave:COLON)(':')
            Octave:INTEGER_LITERAL
              PsiElement(Octave:INTEGER_LITERAL)('60')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n\n')
  PsiComment(Octave:COMMENT)('% Plot the figures')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('% In the results it should be noticed that:')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('% - there is much more people living in the south than in the north. ')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%   This results in rather high variance in the north')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('% - The eastern Finland is known to be worse than western Finland in ')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%   heart diseases also from other studies.')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('% - The inducing inputs are set slightly too sparsely for this data, ')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%   which results in oversmoothness in the maps')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:EXPRESSION
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('figure')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('G')
    PsiElement(Octave:EQ)('=')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('repmat')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:CONST
            PsiElement(Octave:NAN_KEYWORD)('NaN')
        PsiElement(Octave:COMMA)(',')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('size')
          Octave:PAR_EXPRESSION
            PsiElement(Octave:LPAR)('(')
            Octave:EXPRESSION
              Octave:REFERENCE_EXPRESSION
                PsiElement(Octave:IDENTIFIER)('X1')
            PsiElement(Octave:RPAR)(')')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('G')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('xxii')
        PsiElement(Octave:RPAR)(')')
    PsiElement(Octave:EQ)('=')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('exp')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('Ef')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:EXPRESSION
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('pcolor')
    Octave:PAR_EXPRESSION
      PsiElement(Octave:LPAR)('(')
      Octave:EXPRESSION
        Octave:REFERENCE_EXPRESSION
          PsiElement(Octave:IDENTIFIER)('X1')
      PsiElement(Octave:COMMA)(',')
      Octave:EXPRESSION
        Octave:REFERENCE_EXPRESSION
          PsiElement(Octave:IDENTIFIER)('X2')
      PsiElement(Octave:COMMA)(',')
      Octave:EXPRESSION
        Octave:REFERENCE_EXPRESSION
          PsiElement(Octave:IDENTIFIER)('G')
      PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:COMMA)(',')
  Octave:EXPRESSION
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('shading')
    PsiWhiteSpace(' ')
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('flat')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:EXPRESSION
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('colormap')
    Octave:PAR_EXPRESSION
      PsiElement(Octave:LPAR)('(')
      Octave:EXPRESSION
        Octave:REFERENCE_EXPRESSION
          PsiElement(Octave:IDENTIFIER)('mapcolor')
        Octave:PAR_EXPRESSION
          PsiElement(Octave:LPAR)('(')
          Octave:EXPRESSION
            Octave:REFERENCE_EXPRESSION
              PsiElement(Octave:IDENTIFIER)('G')
          PsiElement(Octave:RPAR)(')')
      PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:COMMA)(',')
  Octave:EXPRESSION
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('colorbar')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%set(gca, 'Clim', [0.6    1.5])')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:EXPRESSION
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('axis')
    PsiWhiteSpace(' ')
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('equal')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:EXPRESSION
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('axis')
    Octave:PAR_EXPRESSION
      PsiElement(Octave:LPAR)('(')
      Octave:EXPRESSION
        Octave:BRACKET_EXPRESSION
          PsiElement(Octave:LBRACKET)('[')
          Octave:EXPRESSION
            Octave:INTEGER_LITERAL
              PsiElement(Octave:INTEGER_LITERAL)('0')
          PsiWhiteSpace(' ')
          Octave:EXPRESSION
            Octave:INTEGER_LITERAL
              PsiElement(Octave:INTEGER_LITERAL)('35')
          PsiWhiteSpace(' ')
          Octave:EXPRESSION
            Octave:INTEGER_LITERAL
              PsiElement(Octave:INTEGER_LITERAL)('0')
          PsiWhiteSpace(' ')
          Octave:EXPRESSION
            Octave:INTEGER_LITERAL
              PsiElement(Octave:INTEGER_LITERAL)('60')
          PsiElement(Octave:RBRACKET)(']')
      PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:EXPRESSION
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('title')
    Octave:PAR_EXPRESSION
      PsiElement(Octave:LPAR)('(')
      Octave:EXPRESSION
        Octave:STRING_LITERAL
          PsiElement(Octave:STRING)(''Posterior mean of the relative risk, FIC'')
      PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:EXPRESSION
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('printPmtkFigure')
    Octave:PAR_EXPRESSION
      PsiElement(Octave:LPAR)('(')
      Octave:EXPRESSION
        Octave:STRING_LITERAL
          PsiElement(Octave:STRING)(''gpSpatialDemoLaplaceMean'')
      PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:LINE_BREAK)('\n\n\n')
  Octave:EXPRESSION
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('figure')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('G')
    PsiElement(Octave:EQ)('=')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('repmat')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:CONST
            PsiElement(Octave:NAN_KEYWORD)('NaN')
        PsiElement(Octave:COMMA)(',')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('size')
          Octave:PAR_EXPRESSION
            PsiElement(Octave:LPAR)('(')
            Octave:EXPRESSION
              Octave:REFERENCE_EXPRESSION
                PsiElement(Octave:IDENTIFIER)('X1')
            PsiElement(Octave:RPAR)(')')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('G')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('xxii')
        PsiElement(Octave:RPAR)(')')
    PsiElement(Octave:EQ)('=')
    Octave:EXPRESSION
      Octave:BINARY_EXPRESSION
        Octave:PAR_EXPRESSION
          PsiElement(Octave:LPAR)('(')
          Octave:EXPRESSION
            Octave:BINARY_EXPRESSION
              Octave:REFERENCE_EXPRESSION
                PsiElement(Octave:IDENTIFIER)('exp')
              Octave:PAR_EXPRESSION
                PsiElement(Octave:LPAR)('(')
                Octave:EXPRESSION
                  Octave:REFERENCE_EXPRESSION
                    PsiElement(Octave:IDENTIFIER)('Varf')
                PsiElement(Octave:RPAR)(')')
              PsiWhiteSpace(' ')
              PsiElement(Octave:MINUS)('-')
              PsiWhiteSpace(' ')
              Octave:INTEGER_LITERAL
                PsiElement(Octave:INTEGER_LITERAL)('1')
          PsiElement(Octave:RPAR)(')')
        PsiElement(Octave:DOT_MULTIPLICATION)('.*')
        Octave:REFERENCE_EXPRESSION
          PsiElement(Octave:IDENTIFIER)('exp')
        Octave:PAR_EXPRESSION
          PsiElement(Octave:LPAR)('(')
          Octave:EXPRESSION
            Octave:BINARY_EXPRESSION
              Octave:BINARY_EXPRESSION
                Octave:INTEGER_LITERAL
                  PsiElement(Octave:INTEGER_LITERAL)('2')
                PsiElement(Octave:MULTIPLICATION)('*')
                Octave:REFERENCE_EXPRESSION
                  PsiElement(Octave:IDENTIFIER)('Ef')
              PsiElement(Octave:PLUS)('+')
              Octave:REFERENCE_EXPRESSION
                PsiElement(Octave:IDENTIFIER)('Varf')
          PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:SEMICOLON)(';')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:EXPRESSION
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('pcolor')
    Octave:PAR_EXPRESSION
      PsiElement(Octave:LPAR)('(')
      Octave:EXPRESSION
        Octave:REFERENCE_EXPRESSION
          PsiElement(Octave:IDENTIFIER)('X1')
      PsiElement(Octave:COMMA)(',')
      Octave:EXPRESSION
        Octave:REFERENCE_EXPRESSION
          PsiElement(Octave:IDENTIFIER)('X2')
      PsiElement(Octave:COMMA)(',')
      Octave:EXPRESSION
        Octave:REFERENCE_EXPRESSION
          PsiElement(Octave:IDENTIFIER)('G')
      PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:COMMA)(',')
  Octave:EXPRESSION
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('shading')
    PsiWhiteSpace(' ')
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('flat')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:EXPRESSION
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('colormap')
    Octave:PAR_EXPRESSION
      PsiElement(Octave:LPAR)('(')
      Octave:EXPRESSION
        Octave:REFERENCE_EXPRESSION
          PsiElement(Octave:IDENTIFIER)('mapcolor')
        Octave:PAR_EXPRESSION
          PsiElement(Octave:LPAR)('(')
          Octave:EXPRESSION
            Octave:REFERENCE_EXPRESSION
              PsiElement(Octave:IDENTIFIER)('G')
          PsiElement(Octave:RPAR)(')')
      PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:COMMA)(',')
  Octave:EXPRESSION
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('colorbar')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('%set(gca, 'Clim', [0.005    0.03])')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:EXPRESSION
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('axis')
    PsiWhiteSpace(' ')
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('equal')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:EXPRESSION
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('axis')
    Octave:PAR_EXPRESSION
      PsiElement(Octave:LPAR)('(')
      Octave:EXPRESSION
        Octave:BRACKET_EXPRESSION
          PsiElement(Octave:LBRACKET)('[')
          Octave:EXPRESSION
            Octave:INTEGER_LITERAL
              PsiElement(Octave:INTEGER_LITERAL)('0')
          PsiWhiteSpace(' ')
          Octave:EXPRESSION
            Octave:INTEGER_LITERAL
              PsiElement(Octave:INTEGER_LITERAL)('35')
          PsiWhiteSpace(' ')
          Octave:EXPRESSION
            Octave:INTEGER_LITERAL
              PsiElement(Octave:INTEGER_LITERAL)('0')
          PsiWhiteSpace(' ')
          Octave:EXPRESSION
            Octave:INTEGER_LITERAL
              PsiElement(Octave:INTEGER_LITERAL)('60')
          PsiElement(Octave:RBRACKET)(']')
      PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:EXPRESSION
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('title')
    Octave:PAR_EXPRESSION
      PsiElement(Octave:LPAR)('(')
      Octave:EXPRESSION
        Octave:STRING_LITERAL
          PsiElement(Octave:STRING)(''Posterior variance of the relative risk, FIC'')
      PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:EXPRESSION
    Octave:REFERENCE_EXPRESSION
      PsiElement(Octave:IDENTIFIER)('printPmtkFigure')
    Octave:PAR_EXPRESSION
      PsiElement(Octave:LPAR)('(')
      Octave:EXPRESSION
        Octave:STRING_LITERAL
          PsiElement(Octave:STRING)(''gpSpatialDemoLaplaceVar'')
      PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:LINE_BREAK)('\n\n\n\n')
  PsiComment(Octave:COMMENT)('% the MAP estimate of the hyperparameters in kilometers. Notice that the ')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('% co-ordinates in the data are not in kilometers. x=1 corresponds to 20km ')
  PsiElement(Octave:LINE_BREAK)('\n')
  PsiComment(Octave:COMMENT)('% in real life')
  PsiElement(Octave:LINE_BREAK)('\n')
  Octave:ASSIGNMENT_STATEMENT
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('S2')
    PsiWhiteSpace(' ')
    PsiElement(Octave:EQ)('=')
    PsiWhiteSpace(' ')
    Octave:EXPRESSION
      Octave:REFERENCE_EXPRESSION
        PsiElement(Octave:IDENTIFIER)('sprintf')
      Octave:PAR_EXPRESSION
        PsiElement(Octave:LPAR)('(')
        Octave:EXPRESSION
          Octave:STRING_LITERAL
            PsiElement(Octave:STRING)(''lengt-scale: %.3f, magnSigma2: %.3f \n'')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('gp')
          PsiElement(Octave:DOT)('.')
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('cf')
          Octave:BRACE_EXPRESSION
            PsiElement(Octave:LBRACE)('{')
            Octave:EXPRESSION
              Octave:INTEGER_LITERAL
                PsiElement(Octave:INTEGER_LITERAL)('1')
            PsiElement(Octave:RBRACE)('}')
          PsiElement(Octave:DOT)('.')
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('lengthScale')
        PsiElement(Octave:COMMA)(',')
        PsiWhiteSpace(' ')
        Octave:EXPRESSION
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('gp')
          PsiElement(Octave:DOT)('.')
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('cf')
          Octave:BRACE_EXPRESSION
            PsiElement(Octave:LBRACE)('{')
            Octave:EXPRESSION
              Octave:INTEGER_LITERAL
                PsiElement(Octave:INTEGER_LITERAL)('1')
            PsiElement(Octave:RBRACE)('}')
          PsiElement(Octave:DOT)('.')
          Octave:REFERENCE_EXPRESSION
            PsiElement(Octave:IDENTIFIER)('magnSigma2')
        PsiElement(Octave:RPAR)(')')
  PsiElement(Octave:LINE_BREAK)('\n\n')
  PsiComment(Octave:COMMENT)('%{\n% --- MCMC ---\n\n% Set the approximate inference method to MCMC\ngp = gp_init('set', gp, 'latent_method', {'MCMC', zeros(size(yy))', @scaled_hmc});\n\n% Set the sampling options\n\n% HMC-hyper\nhmc_opt.steps=3;\nhmc_opt.stepadj=0.01;\nhmc_opt.nsamples=1;\nhmc_opt.persistence=0;\nhmc_opt.decay=0.8;\n    \n% HMC-latent\nlatent_opt.nsamples=1;\nlatent_opt.nomit=0;\nlatent_opt.persistence=0;\nlatent_opt.repeat=20;\nlatent_opt.steps=20;\nlatent_opt.stepadj=0.15;\nlatent_opt.window=5;\n\n% Here we make an initialization with \n% slow sampling parameters\n[rgp,gp,opt]=gp_mc(gp, xx, yy, 'z', ye, 'hmc_opt', hmc_opt, 'latent_opt', latent_opt);\n\n% Now we reset the sampling parameters to \n% achieve faster sampling\nopt.latent_opt.repeat=1;\nopt.latent_opt.steps=7;\nopt.latent_opt.window=1;\nopt.latent_opt.stepadj=0.15;\nopt.hmc_opt.persistence=0;\nopt.hmc_opt.stepadj=0.01;\nopt.hmc_opt.steps=2;\n\nopt.display = 1;\nopt.hmc_opt.display = 0;\nopt.latent_opt.display=0;\n\n% Define help parameters for plotting\nxxii=sub2ind([60 35],xx(:,2),xx(:,1));\n[X1,X2]=meshgrid(1:35,1:60);\n\n% Conduct the actual sampling.\n% Inside the loop we sample one sample from the latent values and \n% hyper-parameters at each iteration. After that we plot the samples \n% so that we can visually inspect the progress of sampling\nwhile length(rgp.edata)<1000 %   1000\n    [rgp,gp,opt]=gp_mc(gp, xx, yy, 'record', rgp, 'z', ye, opt);\n    fprintf('        mean hmcrej: %.2f latrej: %.2f\n', mean(rgp.hmcrejects), mean(rgp.lrejects))\n    figure(3)\n    clf\n    subplot(1,2,1)\n    plot(rgp.cf{1}.lengthScale, rgp.cf{1}.magnSigma2)\n    xlabel('lenght-scale')\n    ylabel('magnitude')\n    hold on\n    plot(rgp.cf{1}.lengthScale(end), rgp.cf{1}.magnSigma2(end),'r*')\n    drawnow\n    %    subplot(2,2,[2 4])\n    subplot(1,2,2)\n    G=repmat(NaN,size(X1));\n    G(xxii)=exp(gp.latentValues);\n    pcolor(X1,X2,G),shading flat\n    colormap(mapcolor(G)),colorbar\n    axis equal\n    axis([0 35 0 60])\n    title('relative risk')\n    drawnow\nend\n\nfigure(3)\nclf\nG=repmat(NaN,size(X1));\nG(xxii)=median(exp(rgp.latentValues));\npcolor(X1,X2,G),shading flat\ncolormap(mapcolor(G)),colorbar\nset(gca, 'Clim', [0.6    1.5])\naxis equal\naxis([0 35 0 60])\ntitle('Posterior median of relative risk, FIC GP')\n\nfigure(4)\nG=repmat(NaN,size(X1));\nG(xxii)=std(exp(rgp.latentValues), [], 1).^2;\npcolor(X1,X2,G),shading flat\ncolormap(mapcolor(G)),colorbar\nset(gca, 'Clim', [0.005    0.03])\naxis equal\naxis([0 35 0 60])\ntitle('Posterior variance of relative risk, FIC GP')\n%}')